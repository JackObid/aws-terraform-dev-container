url: https://gitlab.aws.dev/proserve-labs/aws-terraform-dev-container

logo: doc/logo.png

title: AWS Terraform Dev Container
description: A VSCode Dev Container with [tools][tools] to help you build and manage AWS infrastructure with Terraform

screenshots:
  - caption: Develop your project in a Docker container
    label: screenshot-1
    url: doc/images/screenshot-1.gif
  - caption: Increase productivity with well-defined `Make` commands
    label: screenshot-2
    url: doc/images/screenshot-2.gif
  - caption: Ensure every team member has all the tools on their correct versions
    label: screenshot-3
    url: doc/images/screenshot-3.gif
  - caption: Extensions already installed for you
    label: screenshot-4
    url: doc/images/screenshot-4.png

getting_started: |-
  1. On a terminal, inside your Terraform project, execute the following on Mac, Linux or [WSL][wsl]:
  ```bash
  curl -sL https://raw.githubusercontent.com/awslabs/aws-terraform-dev-container/main/scripts/init.sh | bash
  ````
  2. Open the folder with VSCode
  3. Reopen in Container

  To reopen in container manually, open the [command pallete](https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette) on VS Code and select `Rebuild and Reopen in Container`

prerequisites:
  content: |-
    A list of things you need, or how to install them.
  references:
    - name: Docker
      description: The fastest way to containerize applications
      url: https://www.docker.com/products/docker-desktop/
    - name: Visual Studio Code
      description: Visual Studio Code is a code editor redefined and optimized for building and debugging modern web and cloud applications.
      url: https://code.visualstudio.com/
    - name: VSCode Remote Development Extension Pack
      description: An extension pack that lets you open any folder in a container, on a remote machine, or in WSL and take advantage of VS Code's full feature set.
      url: https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack

usage: |-
  ```bash
  make [tab][tab]
  ```
  For example, if you want to explore the most common [terraform][terraform] commands:
  ```bash
  make terraform/[tab]
  apply     clean     destroy   fmt       init      init/     plan      validate  version
  ```

  To display all available commands:
  ```bash
  make help
  ```
  For more information about each [Make targets available](Makefile.md).

references:
  - name: Terraform by HashiCorp
    description: Terraform is an open-source infrastructure as code software tool that enables you to safely and predictably create, change, and improve infrastructure.
    url: https://www.terraform.io
  - name: Changelog
    description: All notable changes.
    url: CHANGELOG.md
  - name: Code Of Conduct
    description: Amazon Open Source Code of Conduct
    url: CODE_OF_CONDUCT.md
  - name: Contributing
    description: Learn how to contribute
    url: CONTRIBUTING.md
  - name: License
    description: MIT No Attribution
    url: LICENSE
  - name: GNU Make
    description: If you are new to make, or are looking for a general introduction.
    url: https://www.gnu.org/software/make/manual/make.html

license: MIT-0
copyright: Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.

anchors:
  - name: docker
    url: https://www.docker.com/products/docker-desktop/
  - name: vscode-dev-container
    url: https://code.visualstudio.com/docs/remote/containers
  - name: terraform
    url: https://www.terraform.io
  - name: license
    url: LICENSE
  - name: tools
    url: TOOLS
  - name: wsl
    url: https://learn.microsoft.com/en-us/windows/wsl/install
